<?php
/**
 * This class has been auto-generated by the Doctrine ORM Framework
 */
class PropertyTable extends Doctrine_Table
{
  /**
   * Shorthand to create or update properties
   *
   * @return void
   * @author Carlos Escribano <carlos@markhaus.com>
   **/
  public static function set($key, $value)
  {
    if (!$p = Doctrine::getTable('Property')->findOneBy('keey', $key))
    {
      $p = new Property();
      $p->setKeey($key);
    }
    
    $p->setValue($value);
    $p->save();
  }
  
  /**
   * Shorthand to get a Property value with default value
   * 
   * @return mixed
   * @author Carlos Escribano <carlos@markhaus.com>
   */
  public static function get($key, $value = null)
  {
    if (!$p = Doctrine::getTable('Property')->findOneBy('keey', $key))
    {
      return $value;
    }
    
    return $p->getValue();
  }
  
  /**
   * get property with $key but the raw value of the database
   *
   * @return string
   * @author Enrique Martinez
   **/
  public static function getRaw($key, $default = null)
  {
    $p = Doctrine::getTable('Property')->findOneBy('keey', $key);

    return $p ? $p->getRawValue() : $default;
  }
  
  /**
   * this is to retrieve the $arrKey value of a Property
   * that is an array
   *
   * @return mixed
   * @author Enrique Martinez
   */
  public static function getArrayKey($key, $arrKey)
  {
    $arr = self::get($key);
    
    return $arr[$arrKey];
  }
  
  /**
   * this is to retrieve an array of Key values of a Property whose name starts similarly
   *
   * $arr = PropertyTable::getKeysLike('tax'); $arr = PropertyTable::getKeysLike('serie');
   * @author Leo
   **/
  public static function getKeysLike($key)
  {
    $arr=array();
    $c = new Criteria;
    $c->add(parent::KEY, '%'.$key.'_%', CRITERIA::LIKE);
    $obj = parent::doSelect($c);
    foreach($obj as $o)
    {
      foreach($o->getValue() as $vk =>$vv)
      {
        $arr[$vk] = $vv;
      }
    }
    return $arr;
  }
}