<?php

/**
 * BasePayment
 * 
 * This class has been auto-generated by the Doctrine ORM Framework
 * 
 * @property integer $invoice_id
 * @property date $date
 * @property decimal $amount
 * @property clob $notes
 * @property Invoice $Invoice
 * 
 * @method integer getInvoiceId()  Returns the current record's "invoice_id" value
 * @method date    getDate()       Returns the current record's "date" value
 * @method decimal getAmount()     Returns the current record's "amount" value
 * @method clob    getNotes()      Returns the current record's "notes" value
 * @method Invoice getInvoice()    Returns the current record's "Invoice" value
 * @method Payment setInvoiceId()  Sets the current record's "invoice_id" value
 * @method Payment setDate()       Sets the current record's "date" value
 * @method Payment setAmount()     Sets the current record's "amount" value
 * @method Payment setNotes()      Sets the current record's "notes" value
 * @method Payment setInvoice()    Sets the current record's "Invoice" value
 * 
 * @package    siwapp
 * @subpackage model
 * @author     Your name here
 * @version    SVN: $Id: Builder.php 7490 2010-03-29 19:53:27Z jwage $
 */
abstract class BasePayment extends sfDoctrineRecord
{
    public function setTableDefinition()
    {
        $this->setTableName('payment');
        $this->hasColumn('invoice_id', 'integer', null, array(
             'type' => 'integer',
             ));
        $this->hasColumn('date', 'date', null, array(
             'type' => 'date',
             ));
        $this->hasColumn('amount', 'decimal', 53, array(
             'type' => 'decimal',
             'scale' => 15,
             'length' => 53,
             ));
        $this->hasColumn('notes', 'clob', null, array(
             'type' => 'clob',
             ));

        $this->option('charset', 'utf8');
    }

    public function setUp()
    {
        parent::setUp();
        $this->hasOne('Invoice', array(
             'local' => 'invoice_id',
             'foreign' => 'id',
             'onDelete' => 'cascade'));
    }
}